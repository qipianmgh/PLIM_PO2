function [methodinfo,structs,enuminfo,ThunkLibName]=Interface
%INTERFACE Create structures to define interfaces found in 'Interface'.

%This function was generated by loadlibrary.m parser version  on Thu Jul  8 18:41:22 2021
%perl options:'Interface.i -outfile=Interface.m -thunkfile=Interface_thunk_pcwin64.c -header=Interface.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'Interface_thunk_pcwin64');
% int Constructor ( int LCType ); 
fcns.thunkname{fcnNum}='int32int32Thunk';fcns.name{fcnNum}='Constructor'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void Deconstructor (); 
fcns.thunkname{fcnNum}='voidThunk';fcns.name{fcnNum}='Deconstructor'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void SLMPower ( int PowerState ); 
fcns.thunkname{fcnNum}='voidint32Thunk';fcns.name{fcnNum}='SLMPower'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% void ReadTIFF ( const char * TIFFPath , unsigned char * TIFFData ); 
fcns.thunkname{fcnNum}='voidcstringvoidPtrThunk';fcns.name{fcnNum}='ReadTIFF'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'cstring', 'uint8Ptr'};fcnNum=fcnNum+1;
% void WriteImage ( int board , unsigned char * Image ); 
fcns.thunkname{fcnNum}='voidint32voidPtrThunk';fcns.name{fcnNum}='WriteImage'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32', 'uint8Ptr'};fcnNum=fcnNum+1;
% void WriteCal ( int board , unsigned char * Image ); 
fcns.thunkname{fcnNum}='voidint32voidPtrThunk';fcns.name{fcnNum}='WriteCal'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32', 'uint8Ptr'};fcnNum=fcnNum+1;
% void LoadLUTFile ( int board , const char * LUTFileName ); 
fcns.thunkname{fcnNum}='voidint32cstringThunk';fcns.name{fcnNum}='LoadLUTFile'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32', 'cstring'};fcnNum=fcnNum+1;
% int ComputeTF ( float FrameRate ); 
fcns.thunkname{fcnNum}='int32floatThunk';fcns.name{fcnNum}='ComputeTF'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'single'};fcnNum=fcnNum+1;
% void SetTrueFrames ( int TrueFrames ); 
fcns.thunkname{fcnNum}='voidint32Thunk';fcns.name{fcnNum}='SetTrueFrames'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
methodinfo=fcns;